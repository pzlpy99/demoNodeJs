{"version":3,"sources":["hooks/useKeyPress.js","hooks/useIpcRenderer.js","component/FileSearch.js","hooks/useContextMenu.js","utils/helper.js","component/FileList.js","component/BottomBtn.js","component/TabList.js","utils/fileHelper.js","component/Loader.js","App.js","serviceWorker.js","index.js"],"names":["useKeyPress","targetKeyCode","useState","keyPressed","setKeyPressed","keyUpHandler","keyCode","keyDownHandler","useEffect","document","addEventListener","removeEventListener","ipcRenderer","window","require","useIpcRenderer","keyCallbackMap","Object","keys","forEach","key","on","removeListener","FileSearch","title","onFileSearch","inputActive","setInputActive","value","setValue","enterPressed","escPressed","node","useRef","closeSearch","current","focus","className","type","onClick","size","icon","faSearch","ref","onChange","e","target","faTimes","defaultProps","remote","Menu","MenuItem","useContextMenu","itemArr","targetSelector","deps","clickedElement","menu","item","append","handelContextMenu","querySelector","contains","popup","getCurrentWindow","flattenArr","arr","reduce","map","id","objToArr","obj","getParentNode","parentClassName","classList","parentNode","timestampToString","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","FileList","files","onFileClick","onSaveEdit","onFileDelete","editStatus","setEditStatus","editItem","isNew","clickedItem","label","click","parentElement","dataset","newFile","find","file","trim","data-id","data-title","placeholder","faMarkdown","faEdit","faTrash","prototypes","PropTypes","array","func","BottomBtn","text","colorClass","onBtnClick","protoTypes","string","element","isRequired","test","TabList","activeId","unsaveIds","onTabClick","onCloseTab","withUnsavedMark","includes","fClassName","classNames","href","preventDefault","stopPropagation","fs","promises","fileHelper","readFile","path","encoding","writeFile","content","renameFile","newPath","rename","deleteFile","unlink","Loader","role","join","basename","extname","dirname","Store","fileStore","name","settingsStore","getAutoSync","every","get","saveFilesToStore","filesStoreObj","result","createdAt","isSynced","updateAt","set","App","setFiles","activeFileID","setActiveFileID","openedFileIDs","setOpenedFileIDs","unsavedFileIDs","setUnsavedFileIDs","searchedFiles","setSearchedFiles","isLoading","setLoading","filesArr","savedLocation","app","getPath","openedFiles","openID","fileListArr","length","activeFile","tabClose","tabWithout","filter","fileID","createNewFile","newID","uuidv4","body","createAt","getTime","importFiles","dialog","showOpenDialog","properties","filters","extensions","paths","Array","isArray","importFilesArr","values","newFiles","showMessageBox","message","then","send","modifiedFile","event","currentFile","status","isLoaded","currentTime","keyword","afterDelete","oldPath","faPlus","faFileImport","fileChange","options","minHeight","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88d82d13.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nconst useKeyPress = (targetKeyCode) => {\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  const keyUpHandler = ({ keyCode }) => {\n    if (keyCode === targetKeyCode) {\n      setKeyPressed(false)\n    }\n  }\n  const keyDownHandler = ({ keyCode }) => {\n    if (keyCode === targetKeyCode) {\n      setKeyPressed(true)\n    }\n  }\n  useEffect(() => {\n    document.addEventListener('keyup', keyUpHandler)\n    document.addEventListener('keydown', keyDownHandler)\n\n    return (() => {\n      document.removeEventListener('keyup', keyUpHandler)\n      document.removeEventListener('keydown', keyDownHandler)\n    })\n  }, [])\n  return keyPressed\n}\n\nexport default useKeyPress","import { useEffect } from 'react';\nconst { ipcRenderer } = window.require('electron')\n\n\nconst useIpcRenderer = (keyCallbackMap) => {\n  useEffect(() => {\n    Object.keys(keyCallbackMap).forEach(key => {\n      ipcRenderer.on(key, keyCallbackMap[key])\n    })\n    return () => {\n      Object.keys(keyCallbackMap).forEach(key => {\n        ipcRenderer.removeListener(key, keyCallbackMap[key])\n      })\n    }\n  })\n}\n\nexport default useIpcRenderer","import React, { useState, useEffect, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport PropTypes from 'prop-types'\nimport useKeyPress from '../hooks/useKeyPress'\nimport useIpcRenderer from '../hooks/useIpcRenderer'\n\nconst FileSearch = ({ title, onFileSearch }) => {\n  const [inputActive, setInputActive] = useState(false)\n  const [value, setValue] = useState('')\n  const enterPressed = useKeyPress(13)\n  const escPressed = useKeyPress(27)\n  let node = useRef(null)\n\n  const closeSearch = () => {\n    setInputActive(false)\n    setValue('')\n    onFileSearch('')\n  }\n  useEffect(() => {\n    if (enterPressed && inputActive) {\n      onFileSearch(value)\n    }\n    if (escPressed && inputActive) {\n      closeSearch()\n    }\n  })\n  useEffect(() => {\n    if (inputActive) {\n      node.current.focus()\n    }\n  }, [inputActive])\n  useIpcRenderer({\n    'search-file': setInputActive,\n  })\n  return (\n    <div className=\"alert alert-primary d-flex justify-content-between align-items-center mb-0\">\n      {\n        !inputActive &&\n        <>\n          <span>{title}</span>\n          <button\n            type=\"button\"\n            className=\"icon-button\"\n            onClick={() => { setInputActive(true) }}\n          >\n            <FontAwesomeIcon\n              title=\"搜索\"\n              size=\"lg\"\n              icon={faSearch}\n            />\n          </button>\n        </>\n      }\n      {\n        inputActive &&\n        <>\n          <input\n            className=\"form-control\"\n            value={value}\n            ref={node}\n            onChange={(e) => { setValue(e.target.value) }}\n          />\n          <button\n            type=\"button\"\n            className=\"icon-button\"\n            onClick={closeSearch}\n          >\n            <FontAwesomeIcon\n              title=\"关闭\"\n              size=\"lg\"\n              icon={faTimes}\n            />\n          </button>\n        </>\n\n      }\n    </div>\n  )\n}\nFileSearch.propTypes = {\n  title: PropTypes.string,\n  onFileSearch: PropTypes.func.isRequired,\n}\nFileSearch.defaultProps = {\n  title: \"我的文档\",\n}\nexport default FileSearch ","import { useEffect, useRef } from 'react'\nconst { remote } = window.require('electron')\nconst { Menu, MenuItem } = remote\n\nconst useContextMenu = (itemArr, targetSelector, deps) => {\n  let clickedElement = useRef(null)\n  useEffect(() => {\n    const menu = new Menu()\n    itemArr.forEach(item => {\n      menu.append(new MenuItem(item))\n    })\n    const handelContextMenu = (e) => {\n      if (document.querySelector(targetSelector).contains(e.target)) {\n        clickedElement.current = e.target\n        menu.popup({ window: remote.getCurrentWindow() })\n      }\n    }\n    window.addEventListener('contextmenu', handelContextMenu)\n    return () => {\n      window.removeEventListener('contextmenu', handelContextMenu)\n    }\n  }, [deps])\n  return clickedElement\n}\nexport default useContextMenu","export const flattenArr = (arr) => {\n  return arr.reduce((map, item) => {\n    map[item.id] = item\n    return map\n  }, {})\n}\n\nexport const objToArr = (obj) => {\n  return Object.keys(obj).map(key => obj[key])\n}\n\nexport const getParentNode = (node, parentClassName) => {\n  let current = node\n  while (current !== null) {\n    if (current.classList.contains(parentClassName)) {\n      return current\n    }\n    current = current.parentNode\n  }\n  return false\n}\n\nexport const timestampToString = (timestamp) => {\n  const date = new Date(timestamp)\n  return date.toLocaleDateString() + ' ' + date.toLocaleTimeString()\n}","import React, { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons'\nimport PropTypes from 'prop-types'\nimport useKeyPress from '../hooks/useKeyPress'\nimport useContextMenu from '../hooks/useContextMenu'\nimport { getParentNode } from '../utils/helper'\n\nconst FileList = ({ files, onFileClick, onSaveEdit, onFileDelete }) => {\n  const [editStatus, setEditStatus] = useState(false)\n  const [value, setValue] = useState('')\n  const enterPressed = useKeyPress(13)\n  const escPressed = useKeyPress(27)\n  const closeSearch = (editItem) => {\n    setEditStatus(false)\n    setValue('')\n    if (editItem.isNew) {\n      onFileDelete(editItem.id)\n    }\n  }\n  const clickedItem = useContextMenu([\n    {\n      label: '打开',\n      click: () => {\n        const parentElement = getParentNode(clickedItem.current, 'file-item')\n        if (parentElement) {\n          onFileClick(parentElement.dataset.id)\n        }\n        // console.log(parentElement.dataset.id)\n      }\n    },\n    {\n      label: '重命名',\n      click: () => {\n        const parentElement = getParentNode(clickedItem.current, 'file-item')\n        if (parentElement) {\n          onFileClick(parentElement.dataset.id)\n        }\n      }\n    },\n    {\n      label: '删除',\n      click: () => {\n        const parentElement = getParentNode(clickedItem.current, 'file-item')\n        if (parentElement) {\n          onFileClick(parentElement.dataset.id)\n        }\n      }\n    }\n  ], '.file-list', [files])\n\n  useEffect(() => {\n    const newFile = files.find(file => file.isNew)\n    if (newFile) {\n      setEditStatus(newFile.id)\n      setValue(newFile.title)\n    }\n  }, [files])\n  useEffect(() => {\n    const editItem = files.find(file => file.id === editStatus)\n    if (enterPressed && editStatus && value.trim() !== '') {\n      onSaveEdit(editItem.id, value, editItem.isNew)\n      setEditStatus(false)\n      setValue('')\n    }\n    if (escPressed && editStatus) {\n      closeSearch(editItem)\n    }\n  })\n  return (<ul className=\"list-group list-group-flush file-list\">\n    {\n      files.map(file => (\n        <li\n          className=\"list-group-item bg-light row d-flex align-items-center file-item mx-0\"\n          key={file.id}\n          data-id={file.id}\n          data-title={file.title}\n        >\n          {\n            ((file.id === editStatus) || file.isNew) &&\n            <>\n              <input\n                className=\"form-control col-10\"\n                value={value}\n                placeholder=\"请输入文件名称\"\n                onChange={(e) => { setValue(e.target.value) }}\n              />\n              <button\n                type=\"button\"\n                className=\"icon-button col-2\"\n                onClick={() => { closeSearch(file) }}\n              >\n                <FontAwesomeIcon\n                  title=\"关闭\"\n                  size=\"lg\"\n                  icon={faTimes}\n                />\n              </button>\n            </>\n          }\n          {\n            (file.id !== editStatus && !file.isNew) &&\n            <>\n              < span className=\"col-2\">\n                <FontAwesomeIcon\n                  size=\"lg\"\n                  icon={faMarkdown}\n                />\n              </span>\n              <span\n                className=\"col-6 c-link\"\n                onClick={() => { onFileClick(file.id) }}\n              >\n                {file.title}\n              </span>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary col-2\"\n                onClick={() => { setEditStatus(file.id); setValue(file.title) }}\n              >\n                <FontAwesomeIcon\n                  title=\"编辑\"\n                  size=\"lg\"\n                  icon={faEdit}\n                />\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary col-2\"\n                onClick={() => { onFileDelete(file.id) }}\n              >\n                <FontAwesomeIcon\n                  title=\"删除\"\n                  size=\"lg\"\n                  icon={faTrash}\n                />\n              </button>\n            </>\n          }\n        </li>\n      ))\n    }\n  </ul >\n  )\n}\n\nFileList.prototypes = {\n  files: PropTypes.array,\n  onFileClick: PropTypes.func,\n  onFileDelete: PropTypes.func,\n  onSaveEdit: PropTypes.func,\n}\n\nexport default FileList","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst BottomBtn = ({ text, colorClass, icon, onBtnClick }) => (\n  <button\n    type=\"button\"\n    className={`btn btn-block no-border ${colorClass}`}\n    onClick={onBtnClick}\n  >\n    <FontAwesomeIcon\n      className=\"mr-2\"\n      size=\"lg\"\n      icon={icon}\n    />\n    {text}\n  </button>\n)\nBottomBtn.protoTypes = {\n  text: PropTypes.string,\n  colorClass: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  onBtnClick: PropTypes.func,\n}\nBottomBtn.protoTypes = {\n  test: '新建',\n}\nexport default BottomBtn","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './TabList.scss'\n\nconst TabList = ({ files, activeId, unsaveIds, onTabClick, onCloseTab }) => {\n  return (\n    <ul className=\"nav nav-pills tablist-component\">\n      {\n        files.map(file => {\n          const withUnsavedMark = unsaveIds.includes(file.id)\n          const fClassName = classNames({\n            'nav-link': true,\n            'active': file.id === activeId,\n            'withUnsaved': withUnsavedMark\n          })\n          return (\n            <li className=\"nav-item\" key={file.id}>\n              <a\n                href=\"#\"\n                className={fClassName}\n                onClick={(e) => { e.preventDefault(); onTabClick(file.id) }}\n              >\n                {file.title}\n                <span\n                  className=\"ml-2 close-icon\"\n                  onClick={(e) => { e.stopPropagation(); onCloseTab(file.id) }}\n                >\n                  <FontAwesomeIcon\n                    icon={faTimes}\n                  />\n                </span>\n                {withUnsavedMark && <span className=\"rounded-circle ml-2 unsaved-icon\"></span>}\n              </a>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}\n\nTabList.propTypes = {\n  files: PropTypes.array,\n  activeId: PropTypes.string,\n  unsaveIds: PropTypes.array,\n  onTabClick: PropTypes.func,\n  onCloseTab: PropTypes.func,\n}\nTabList.defaultProps = {\n  unsaveIds: [],\n}\nexport default TabList","const fs = window.require('fs').promises\n\nconst fileHelper = {\n  readFile: (path) => {\n    return fs.readFile(path, { encoding: 'utf8' })\n  },\n  writeFile: (path, content) => {\n    return fs.writeFile(path, content)\n  },\n  renameFile: (path, newPath) => {\n    return fs.rename(path, newPath)\n  },\n  deleteFile: (path) => {\n    return fs.unlink(path)\n  },\n}\n\nexport default fileHelper","import React from 'react'\nimport './Loader.scss'\n\nconst Loader = ({ text = '处理中' }) => (\n  <div className=\"loading-component text-center\">\n    <div className=\"spinner-grow text-primary\" role=\"status\">\n      <span className=\"sr-only\">{text}</span>\n    </div>\n    <h5 className=\"text-primary\">{text}</h5>\n  </div>\n)\n\nexport default Loader\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FileSearch from \"./component/FileSearch\";\nimport FileList from \"./component/FileList\";\nimport BottomBtn from \"./component/BottomBtn\";\nimport {\n  faPlus,\n  faFileImport,\n  faSave\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TabList from \"./component/TabList\";\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\nimport uuidv4 from \"uuid/v4\";\nimport { flattenArr, objToArr, timestampToString } from \"./utils/helper\";\nimport fileHelper from \"./utils/fileHelper\";\nimport useIpcRenderer from \"./hooks/useIpcRenderer\";\nimport Loader from './component/Loader'\n\nconst { join, basename, extname, dirname } = window.require(\"path\");\nconst { remote, ipcRenderer } = window.require(\"electron\");\nconst Store = window.require(\"electron-store\");\nconst fileStore = new Store({ name: \"Files Data\" });\nconst settingsStore = new Store({ name: \"Settings\" });\nconst getAutoSync = () => ['accessKey', 'secretKey', 'bucketName', 'enableAutoSync'].every(key => !!settingsStore.get(key))\n\nconst saveFilesToStore = files => {\n  const filesStoreObj = objToArr(files).reduce((result, file) => {\n    const { id, path, title, createdAt, isSynced, updateAt } = file;\n    result[id] = {\n      id,\n      path,\n      title,\n      createdAt,\n      isSynced,\n      updateAt\n    };\n    return result;\n  }, {});\n  fileStore.set(\"files\", filesStoreObj);\n};\nfunction App () {\n  const [files, setFiles] = useState(fileStore.get(\"files\") || {});\n  const [activeFileID, setActiveFileID] = useState(\"\");\n  const [openedFileIDs, setOpenedFileIDs] = useState([]);\n  const [unsavedFileIDs, setUnsavedFileIDs] = useState([]);\n  const [searchedFiles, setSearchedFiles] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const filesArr = objToArr(files);\n  const savedLocation =\n    settingsStore.get(\"fileLocation\") || remote.app.getPath(\"documents\");\n\n  const openedFiles = openedFileIDs.map(openID => {\n    return files[openID];\n  });\n  const fileListArr = searchedFiles.length > 0 ? searchedFiles : filesArr;\n  const activeFile = files[activeFileID];\n  const fileClick = fileID => {\n    setActiveFileID(fileID);\n    const currentFile = files[fileID];\n    const { id, title, path, isLoaded } = currentFile\n\n    if (!currentFile.isLoaded) {\n      if (getAutoSync()) {\n        ipcRenderer.send('download-file', { key: `${title}.md`, path, id })\n      } else {\n        fileHelper.readFile(currentFile.path).then(value => {\n          const newFile = { ...files[fileID], body: value, isLoaded: true };\n          setFiles({ ...files, [fileID]: newFile });\n        });\n      }\n\n    }\n    if (!openedFileIDs.includes(fileID)) {\n      setOpenedFileIDs([...openedFileIDs, fileID]);\n    }\n  };\n  const tabClick = fileID => {\n    setActiveFileID(fileID);\n  };\n  const tabClose = id => {\n    const tabWithout = openedFileIDs.filter(fileID => fileID !== id);\n    setOpenedFileIDs(tabWithout);\n    if (tabWithout.length > 0) {\n      setActiveFileID(tabWithout[0]);\n    } else {\n      setActiveFileID(\"\");\n    }\n  };\n  const fileChange = (id, value) => {\n    if (value !== files[id].body) {\n      const newFile = { ...files[id], body: value };\n      setFiles({ ...files, [id]: newFile });\n      if (!unsavedFileIDs.includes(id)) {\n        setUnsavedFileIDs([...unsavedFileIDs, id]);\n      }\n    }\n  };\n  const deleteFile = id => {\n    if (files[id].isNew) {\n      const { [id]: value, ...afterDelete } = files;\n      setFiles(afterDelete);\n    } else {\n      fileHelper.deleteFile(files[id].path).then(() => {\n        const { [id]: value, ...afterDelete } = files;\n        setFiles(afterDelete);\n        saveFilesToStore(afterDelete);\n        tabClose(id);\n      });\n    }\n  };\n  const updateFileName = (id, title, isNew) => {\n    const newPath = isNew\n      ? join(savedLocation, `${title}.md`)\n      : join(dirname(files[id].path), `${title}.md`);\n    const modifiedFile = { ...files[id], title, isNew: false, path: newPath };\n    const newFiles = { ...files, [id]: modifiedFile };\n    if (isNew) {\n      fileHelper.writeFile(newPath, files[id].body).then(() => {\n        setFiles(newFiles);\n        saveFilesToStore(newFiles);\n      });\n    } else {\n      const oldPath = files[id].path;\n      fileHelper.renameFile(oldPath, newPath).then(() => {\n        setFiles(newFiles);\n        saveFilesToStore(newFiles);\n      });\n    }\n  };\n  const fileSearch = keyword => {\n    const newFiles = filesArr.filter(file => file.title.includes(keyword));\n    setSearchedFiles(newFiles);\n  };\n  const createNewFile = () => {\n    const newID = uuidv4();\n    const newFile = {\n      id: newID,\n      title: \"\",\n      body: \"##请输入内容\",\n      createAt: new Date().getTime(),\n      isNew: true\n    };\n    setFiles({ ...files, [newID]: newFile });\n  };\n  const saveCurrentFile = () => {\n    if (activeFile) {\n      const { path, body, title } = activeFile\n      fileHelper.writeFile(path, body).then(() => {\n        setUnsavedFileIDs(unsavedFileIDs.filter(id => id !== activeFile.id));\n        if (getAutoSync()) {\n          ipcRenderer.send('upload-file', { key: `${title}.md`, path })\n        }\n      });\n    }\n  };\n  const importFiles = () => {\n    remote.dialog.showOpenDialog(\n      {\n        title: \"选择导入的文件\",\n        properties: [\"openFile\", \"multiSelections\"],\n        filters: [{ name: \"Markdown files\", extensions: [\"md\"] }]\n      },\n      paths => {\n        if (Array.isArray(paths)) {\n          const filteredPaths = paths.filter(path => {\n            const alreadyAdded = Object.values(files).find(file => {\n              return file.path === path;\n            });\n            return !alreadyAdded;\n          });\n          const importFilesArr = filteredPaths.map(path => {\n            return {\n              id: uuidv4(),\n              title: basename(path, extname(path)),\n              path\n            };\n          });\n          // console.log(importFilesArr)\n          const newFiles = { ...files, ...flattenArr(importFilesArr) };\n          // console.log(newFiles)\n          setFiles(newFiles);\n          saveFilesToStore(newFiles);\n          if (importFilesArr.length > 0) {\n            remote.dialog.showMessageBox({\n              type: \"info\",\n              title: `成功导入了${importFilesArr.length}个文件`,\n              message: `成功导入了${importFilesArr.length}个文件`\n            });\n          }\n        }\n      }\n    );\n  };\n  const activeFileUploaded = () => {\n    const { id } = activeFile\n    const modifiedFile = { ...files[id], isSynced: true, updateAt: new Date().getTime() }\n    const newFiles = { ...files, [id]: modifiedFile }\n    setFiles(newFiles)\n    saveFilesToStore(newFiles)\n  }\n  const activeFileDownloaded = (event, message) => {\n    const currentFile = files[message.id]\n    const { id, path } = currentFile\n    fileHelper.readFile(path).then(value => {\n      let newFile\n      if (message.status === 'download-success') {\n        newFile = {\n          ...files[id], body: value, isLoaded: true, isSynced: true, updateAt: new Date().getTime()\n        }\n      } else {\n        newFile = { ...files[id], body: value, isLoaded: true }\n      }\n      const newFiles = { ...files, [id]: newFile }\n      setFiles(newFiles)\n      saveFilesToStore(newFiles)\n    })\n  }\n  const filesUploaded = () => {\n    const newFiles = objToArr(files).reduce((result, file) => {\n      const currentTime = new Date().getTime()\n      result[file.id] = {\n        ...files[file.id],\n        isSynced: true,\n        updateAt: currentTime,\n      }\n      return result\n    }, {})\n    setFiles(newFiles)\n    saveFilesToStore(newFiles)\n  }\n  useIpcRenderer({\n    \"create-new-file\": createNewFile,\n    \"import-file\": importFiles,\n    \"save-edit-file\": saveCurrentFile,\n    \"active-file-uploaded\": activeFileUploaded,\n    \"file-downloaded\": activeFileDownloaded,\n    \"files-uploaded\": filesUploaded,\n    \"loading-status\": (message, status) => { setLoading(status) }\n  });\n  return (\n    <div className=\"App container-fluid px-0\">\n      {isLoading &&\n        <Loader />\n      }\n      <div className=\"row no-gutters\">\n        <div className=\"col-3 bg-light left-panel\">\n          <FileSearch onFileSearch={fileSearch} />\n          <FileList\n            files={fileListArr}\n            onFileClick={fileClick}\n            onFileDelete={deleteFile}\n            onSaveEdit={updateFileName}\n          />\n          <div className=\"row no-gutters button-group\">\n            <div className=\"col\">\n              <BottomBtn\n                text=\"新建\"\n                colorClass=\"btn-primary\"\n                icon={faPlus}\n                onBtnClick={createNewFile}\n              />\n            </div>\n            <div className=\"col\">\n              <BottomBtn\n                text=\"导入\"\n                colorClass=\"btn-success\"\n                icon={faFileImport}\n                onBtnClick={importFiles}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-9 right-panel\">\n          {!activeFile && <div className=\"start-page\">选择或创建新文档</div>}\n          {activeFile && (\n            <>\n              <TabList\n                files={openedFiles}\n                activeId={activeFileID}\n                unsaveIds={unsavedFileIDs}\n                onTabClick={tabClick}\n                onCloseTab={tabClose}\n              />\n              <SimpleMDE\n                key={activeFile && activeFile.id}\n                value={activeFile && activeFile.body}\n                onChange={value => {\n                  fileChange(activeFile.id, value);\n                }}\n                options={{\n                  minHeight: \"515px\"\n                }}\n              />\n              {activeFile.isSynced &&\n                <span className=\"sync-status\">已同步，上次同步{timestampToString(activeFile.updateAt)}</span>}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}